{"id":"../node_modules/handlebars/dist/cjs/handlebars/internal/proto-access.js","dependencies":[{"name":"C:\\WebDesign\\Projects\\middle.messenger.praktikum.yandex\\package.json","includedInParent":true,"mtime":1649623278963},{"name":"C:\\WebDesign\\Projects\\middle.messenger.praktikum.yandex\\node_modules\\handlebars\\package.json","includedInParent":true,"mtime":1649538483692},{"name":"./create-new-lookup-object","loc":{"line":11,"column":37,"index":537},"parent":"C:\\WebDesign\\Projects\\middle.messenger.praktikum.yandex\\node_modules\\handlebars\\dist\\cjs\\handlebars\\internal\\proto-access.js","resolved":"C:\\WebDesign\\Projects\\middle.messenger.praktikum.yandex\\node_modules\\handlebars\\dist\\cjs\\handlebars\\internal\\create-new-lookup-object.js"},{"name":"../logger","loc":{"line":13,"column":22,"index":591},"parent":"C:\\WebDesign\\Projects\\middle.messenger.praktikum.yandex\\node_modules\\handlebars\\dist\\cjs\\handlebars\\internal\\proto-access.js","resolved":"C:\\WebDesign\\Projects\\middle.messenger.praktikum.yandex\\node_modules\\handlebars\\dist\\cjs\\handlebars\\logger.js"}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.createProtoAccessControl = createProtoAccessControl;\nexports.resultIsAllowed = resultIsAllowed;\nexports.resetLoggedProperties = resetLoggedProperties; // istanbul ignore next\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nvar _createNewLookupObject = require('./create-new-lookup-object');\n\nvar _logger = require('../logger');\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar loggedProperties = Object.create(null);\n\nfunction createProtoAccessControl(runtimeOptions) {\n  var defaultMethodWhiteList = Object.create(null);\n  defaultMethodWhiteList['constructor'] = false;\n  defaultMethodWhiteList['__defineGetter__'] = false;\n  defaultMethodWhiteList['__defineSetter__'] = false;\n  defaultMethodWhiteList['__lookupGetter__'] = false;\n  var defaultPropertyWhiteList = Object.create(null); // eslint-disable-next-line no-proto\n\n  defaultPropertyWhiteList['__proto__'] = false;\n  return {\n    properties: {\n      whitelist: _createNewLookupObject.createNewLookupObject(defaultPropertyWhiteList, runtimeOptions.allowedProtoProperties),\n      defaultValue: runtimeOptions.allowProtoPropertiesByDefault\n    },\n    methods: {\n      whitelist: _createNewLookupObject.createNewLookupObject(defaultMethodWhiteList, runtimeOptions.allowedProtoMethods),\n      defaultValue: runtimeOptions.allowProtoMethodsByDefault\n    }\n  };\n}\n\nfunction resultIsAllowed(result, protoAccessControl, propertyName) {\n  if (typeof result === 'function') {\n    return checkWhiteList(protoAccessControl.methods, propertyName);\n  } else {\n    return checkWhiteList(protoAccessControl.properties, propertyName);\n  }\n}\n\nfunction checkWhiteList(protoAccessControlForType, propertyName) {\n  if (protoAccessControlForType.whitelist[propertyName] !== undefined) {\n    return protoAccessControlForType.whitelist[propertyName] === true;\n  }\n\n  if (protoAccessControlForType.defaultValue !== undefined) {\n    return protoAccessControlForType.defaultValue;\n  }\n\n  logUnexpecedPropertyAccessOnce(propertyName);\n  return false;\n}\n\nfunction logUnexpecedPropertyAccessOnce(propertyName) {\n  if (loggedProperties[propertyName] !== true) {\n    loggedProperties[propertyName] = true;\n    logger.log('error', 'Handlebars: Access has been denied to resolve the property \"' + propertyName + '\" because it is not an \"own property\" of its parent.\\n' + 'You can add a runtime option to disable the check or this warning:\\n' + 'See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details');\n  }\n}\n\nfunction resetLoggedProperties() {\n  Object.keys(loggedProperties).forEach(function (propertyName) {\n    delete loggedProperties[propertyName];\n  });\n}"},"sourceMaps":null,"error":null,"hash":"9f98cc82d0c91845355ec1835e134a15","cacheData":{"env":{}}}