{"id":"core/EventBus.ts","dependencies":[{"name":"C:\\WebDesign\\Projects\\middle.messenger.praktikum.yandex\\tsconfig.json","includedInParent":true,"mtime":1649596785868},{"name":"C:\\WebDesign\\Projects\\middle.messenger.praktikum.yandex\\package.json","includedInParent":true,"mtime":1649620785466}],"generated":{"js":"\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EventBus = /*#__PURE__*/function () {\n  function EventBus() {\n    _classCallCheck(this, EventBus);\n\n    this.listeners = {};\n  }\n\n  _createClass(EventBus, [{\n    key: \"on\",\n    value: function on(event, callback) {\n      if (!this.listeners[event]) {\n        this.listeners[event] = [];\n      }\n\n      this.listeners[event].push(callback);\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, callback) {\n      if (!this.listeners[event]) {\n        throw new Error(\"\\u041D\\u0435\\u0442 \\u0441\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F: \".concat(event));\n      }\n\n      this.listeners[event] = this.listeners[event].filter(function (listener) {\n        return listener !== callback;\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (!this.listeners[event]) {\n        return; // throw new Error(`Нет события: ${event}`);\n      }\n\n      this.listeners[event].forEach(function (listener) {\n        listener.apply(void 0, args);\n      });\n    }\n  }]);\n\n  return EventBus;\n}();\n\nexports.default = EventBus;"},"sourceMaps":null,"error":null,"hash":"265b6aa645c77852196a4e8037f86518","cacheData":{"env":{}}}