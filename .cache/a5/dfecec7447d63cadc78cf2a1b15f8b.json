{"id":"../node_modules/handlebars/dist/cjs/handlebars/logger.js","dependencies":[{"name":"C:\\WebDesign\\Projects\\middle.messenger.praktikum.yandex\\package.json","includedInParent":true,"mtime":1649623278963},{"name":"C:\\WebDesign\\Projects\\middle.messenger.praktikum.yandex\\node_modules\\handlebars\\package.json","includedInParent":true,"mtime":1649538483692},{"name":"./utils","loc":{"line":5,"column":21,"index":64},"parent":"C:\\WebDesign\\Projects\\middle.messenger.praktikum.yandex\\node_modules\\handlebars\\dist\\cjs\\handlebars\\logger.js","resolved":"C:\\WebDesign\\Projects\\middle.messenger.praktikum.yandex\\node_modules\\handlebars\\dist\\cjs\\handlebars\\utils.js"}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('./utils');\n\nvar logger = {\n  methodMap: ['debug', 'info', 'warn', 'error'],\n  level: 'info',\n  // Maps a given level value to the `methodMap` indexes above.\n  lookupLevel: function lookupLevel(level) {\n    if (typeof level === 'string') {\n      var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());\n\n      if (levelMap >= 0) {\n        level = levelMap;\n      } else {\n        level = parseInt(level, 10);\n      }\n    }\n\n    return level;\n  },\n  // Can be overridden in the host environment\n  log: function log(level) {\n    level = logger.lookupLevel(level);\n\n    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {\n      var method = logger.methodMap[level]; // eslint-disable-next-line no-console\n\n      if (!console[method]) {\n        method = 'log';\n      }\n\n      for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        message[_key - 1] = arguments[_key];\n      }\n\n      console[method].apply(console, message); // eslint-disable-line no-console\n    }\n  }\n};\nexports['default'] = logger;\nmodule.exports = exports['default'];"},"sourceMaps":null,"error":null,"hash":"b17d2b456096d7e2a7a223447cb3ef54","cacheData":{"env":{}}}